{"version":3,"sources":["components/Button/Button.jsx","components/HelpIcon/HelpIcon.jsx","components/Card/Card.jsx","components/ClickCopy/ClickCopy.jsx","components/TextArea/TextArea.jsx","components/Form/Form.jsx","components/ShareInfo/ShareInfo.jsx","components/ViewContent/ViewContent.jsx","components/FishAnimation/Fishes/Fishes.jsx","components/FishAnimation/FishAnimation.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","props","useState","loading","setLoading","onClick","onClickNoAnimation","finally","className","children","HelpIcon","color","style","textAlign","maxWidth","title","fontSize","fontFamily","fontWeight","arrow","version","id","xmlns","x","y","viewBox","width","position","top","cursor","space","fill","cx","cy","r","d","Card","ClickCopy","text","label","icon","copiado","setCopiado","input","document","createElement","innerHTML","body","appendChild","select","execCommand","removeChild","TextArea","onChange","disabled","defaultText","placeholder","e","target","value","defaultValue","Form","setText","jsonResponse","setJsonResponse","data","onBack","Promise","resolve","base64","Buffer","from","toString","fetch","server","url","method","headers","JSON","stringify","then","response","json","catch","ShareInfo","secret","window","location","href","paddingTop","ViewContent","navigate","setTitle","useEffect","decrypted","error","Fishes","FishAnimation","Main","path","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","console","ReactDOM","render","getElementById","log","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.595863f7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  const [loading, setLoading] = useState(false);\n\n  const click = () => {\n    //Si no quiere animación al ejecutar la función...\n    if (props.onClickNoAnimation) {\n      props.onClickNoAnimation();\n      return;\n    }\n\n    setLoading(true);\n    if (!loading) {\n      props.onClick().finally(() => setLoading(false));\n    }\n  };\n\n  return (\n    <div onClick={loading ? () => {} : click} className=\"button\">\n      {loading ? <div className=\"spinner\"></div> : props.children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst HelpIcon = (props) => {\n  const color = \"#ccd6f6\";\n\n  const getIcon = () => {\n    return (\n      <svg\n        version=\"1.1\"\n        id=\"Capa_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 512 512\"\n        //style=\"enable-background:new 0 0 512 512;\"\n        style={{\n          width: \"21px\",\n          position: \"absolute\",\n          top: \"7px\",\n          cursor: \"pointer\",\n        }}\n        space=\"preserve\"\n      >\n        <g>\n          <g>\n            <g>\n              <circle fill={color} cx=\"256\" cy=\"378.5\" r=\"25\" />\n              <path\n                fill={color}\n                d=\"M256,0C114.516,0,0,114.497,0,256c0,141.484,114.497,256,256,256c141.484,0,256-114.497,256-256\n\t\t\t\tC512,114.516,397.503,0,256,0z M256,472c-119.377,0-216-96.607-216-216c0-119.377,96.607-216,216-216\n\t\t\t\tc119.377,0,216,96.607,216,216C472,375.377,375.393,472,256,472z\"\n              />\n              <path\n                fill={color}\n                d=\"M256,128.5c-44.112,0-80,35.888-80,80c0,11.046,8.954,20,20,20s20-8.954,20-20c0-22.056,17.944-40,40-40\n\t\t\t\tc22.056,0,40,17.944,40,40c0,22.056-17.944,40-40,40c-11.046,0-20,8.954-20,20v50c0,11.046,8.954,20,20,20\n\t\t\t\tc11.046,0,20-8.954,20-20v-32.531c34.466-8.903,60-40.26,60-77.469C336,164.388,300.112,128.5,256,128.5z\"\n              />\n            </g>\n          </g>\n        </g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n      </svg>\n    );\n  };\n\n  return (\n    <div style={{ textAlign: \"right\", maxWidth: props.maxWidth || \"280px\" }}>\n      <Tooltip\n        title={\n          <div\n            style={{\n              fontSize: \"12px\",\n              fontFamily: \"rubik, sans-serif\",\n              fontWeight: \"normal\",\n            }}\n          >\n            👋 El texto que quieras compartir, será encriptado antes de mandarlo\n            a nuestros servidores y también lo estará en nuestras bases de\n            datos.\n            <br />\n            Esto significa que solo tú sabrás el contenido.\n            <br />\n            <br />\n            <b>🔒 Por tu seguridad:</b>\n            <ul>\n              <li>\n                📋 Sólo se podrá consultar una vez el texto, así que asegúrate\n                que copien el contenido una vez abierto, ya que borramos tu\n                registro en nuestras bases de datos después de consultarlo.\n              </li>\n              <li>\n                👮‍♀️ Si intentan consultar tu texto sin la contraseña correcta,\n                será eliminado tu registro de nuestras bases de datos para\n                evitar fuerza bruta.\n              </li>\n              <li>\n                ⌛ Si tu contenido no fue consultado en menos de 24 horas, será\n                eliminado.\n              </li>\n              <li>\n                🔑 Cuando nosotros encriptamos tu contenido, generaremos una{\" \"}\n                <b>llave</b> aleatoria que te compartiremos.\n                <br />\n                La llave es la responsable de encriptar tu contenido, por lo que\n                si intentan desencriptarla con una llave incorrecta, el\n                contenido no será el real.\n                <br />\n                <b>📢 Nosotros no guardamos la llave.</b>\n              </li>\n            </ul>\n            💻 Si eres desarrollador, revisa la consola para ver el repositorio\n            en GitHub y la manera en que puedes integrar tus proyectos a nuestra\n            API REST. 🤓\n          </div>\n        }\n        arrow\n      >\n        {getIcon()}\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default HelpIcon;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport \"./ClickCopy.css\";\n\nconst ClickCopy = ({ text, label, icon = \"\" }) => {\n  const [copiado, setCopiado] = useState(false);\n\n  const copyClipboard = () => {\n    var input = document.createElement(\"textarea\");\n    input.innerHTML = text;\n    document.body.appendChild(input);\n    input.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(input);\n    setCopiado(true);\n  };\n\n  return !copiado ? (\n    <span onClick={copyClipboard} className=\"click-copy\">\n      {icon && <i className={\"clip-icon \" + icon} />}\n      {label}\n    </span>\n  ) : (\n    <span className=\"click-copy-copiado\">\n      <i className=\"clip-icon fas fa-check\" />\n      ¡Copiado!\n    </span>\n  );\n};\n\nexport default ClickCopy;\n","import React from \"react\";\nimport \"./TextArea.css\";\n\nconst TextArea = ({ onChange, disabled, defaultText }) => {\n  return (\n    <textarea\n      placeholder=\"Escribe tu texto...\"\n      disabled={disabled || false}\n      onChange={(e) => onChange && onChange(e.target.value)}\n      defaultValue={defaultText || \"\"}\n    ></textarea>\n  );\n};\n\nexport default TextArea;\n","import React, { Fragment, useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport Card from \"../Card/Card\";\nimport ShareInfo from \"../ShareInfo/ShareInfo\";\nimport TextArea from \"../TextArea/TextArea\";\nimport server from \"../../server.json\";\nimport HelpIcon from \"../HelpIcon/HelpIcon\";\n\nconst Form = () => {\n  const [text, setText] = useState(\"\");\n  const [jsonResponse, setJsonResponse] = useState(null);\n\n  const sendInfo = () => {\n    return new Promise((resolve) => {\n      const base64 = Buffer.from(text).toString(\"base64\");\n\n      fetch(server.url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ text: base64 }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.id) setJsonResponse(data);\n        })\n        .catch(() => resolve(true));\n    });\n  };\n\n  return (\n    <Card>\n      {jsonResponse ? (\n        <Fragment>\n          <h2>Texto encriptado</h2>\n          <HelpIcon maxWidth=\"300px\" />\n          <ShareInfo data={jsonResponse} onBack={() => setJsonResponse(null)} />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <h2>Ingresa tu texto</h2>\n          <HelpIcon />\n\n          <TextArea onChange={setText} />\n          <Button onClick={sendInfo}>\n            <i className=\"btn-icon fas fa-share-alt\" />\n            Compartir\n          </Button>\n        </Fragment>\n      )}\n    </Card>\n  );\n};\n\nexport default Form;\n","import React, { Fragment } from \"react\";\nimport ClickCopy from \"../ClickCopy/ClickCopy\";\nimport \"./ShareInfo.css\";\nimport Button from \"../Button/Button\";\n\nconst ShareInfo = ({ data, onBack }) => {\n  const id = data.id;\n  const secret = data.secret;\n  const url = window.location.href + id + \"/\" + secret;\n\n  return (\n    <Fragment>\n      <div className=\"share-info\">\n        <ClickCopy\n          text={url}\n          label=\"Pulsa aquí para copiar el link para desencriptar\"\n          icon=\"fas fa-clipboard\"\n        />\n        <br />\n        <br />\n        <div className=\"share-info-text\">\n          <b>ID:</b>\n          <br />\n          {id}\n          <br />\n          <br />\n          <b>Secret:</b>\n          <br />\n          {secret}\n        </div>\n      </div>\n\n      <div style={{ paddingTop: \"30px\" }}>\n        <Button onClickNoAnimation={onBack}>\n          <i className=\"btn-icon fas fa-arrow-left\" />\n          Regresar\n        </Button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ShareInfo;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport TextArea from \"../TextArea/TextArea\";\nimport server from \"../../server.json\";\nimport ClickCopy from \"../ClickCopy/ClickCopy\";\nimport Button from \"../Button/Button\";\nimport HelpIcon from \"../HelpIcon/HelpIcon\";\n\nconst ViewContent = ({ navigate, id, secret }) => {\n  const [loading, setLoading] = useState(true);\n  const [text, setText] = useState(null);\n  const [title, setTitle] = useState(\"Cargando...\");\n\n  const fetchData = () => {\n    return new Promise((resolve) => {\n      fetch(server.url, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ id: id, secret: secret }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.text) {\n            const decrypted = Buffer(data.text, \"base64\").toString(\"ascii\");\n            setText(decrypted);\n            setTitle(\"¡Listo!\");\n          } else if (data.error) {\n            setTitle(data.error);\n          }\n        })\n        .finally(() => {\n          resolve(true);\n          setLoading(false);\n        });\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Card>\n      <h2>{title}</h2>\n      {!loading && text !== null ? (\n        <Fragment>\n          <HelpIcon maxWidth=\"115px\" />\n          <TextArea disabled={true} defaultText={text} />\n          <div>\n            <ClickCopy\n              text={text}\n              label=\"Click aquí para copiar el contenido\"\n              icon=\"fas fa-clipboard\"\n            />\n          </div>\n        </Fragment>\n      ) : null}\n      {!loading && (\n        <div style={{ paddingTop: \"30px\" }}>\n          <Button onClickNoAnimation={() => navigate(\"/\")}>\n            <i className=\"btn-icon fas fa-arrow-left\" />\n            Ir al inicio\n          </Button>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default ViewContent;\n","import React, { Fragment } from \"react\";\nimport \"./Fishes.css\";\n\nconst Fishes = () => {\n  return (\n    <Fragment>\n      <div className=\"pond\"></div>\n    </Fragment>\n  );\n};\n\nexport default Fishes;\n","import React, { Fragment } from \"react\";\nimport \"./FishAnimation.css\";\nimport Fishes from \"./Fishes/Fishes\";\n\nconst FishAnimation = () => {\n  return (\n    <Fragment>\n      <Fishes />\n      <div id=\"background-wrap\">\n        <div className=\"bubble x1\"></div>\n        <div className=\"bubble x2\"></div>\n        <div className=\"bubble x3\"></div>\n        <div className=\"bubble x4\"></div>\n        <div className=\"bubble x5\"></div>\n        <div className=\"bubble x6\"></div>\n        <div className=\"bubble x7\"></div>\n        <div className=\"bubble x8\"></div>\n        <div className=\"bubble x9\"></div>\n        <div className=\"bubble x10\"></div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FishAnimation;\n","import React from \"react\";\nimport Form from \"./Form/Form\";\nimport { Router } from \"@reach/router\";\nimport \"./Main.css\";\nimport ViewContent from \"./ViewContent/ViewContent\";\nimport FishAnimation from \"./FishAnimation/FishAnimation\";\n\nconst Main = () => {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Form path=\"/\" />\n        <ViewContent path=\":id/:secret\" />\n      </Router>\n      <FishAnimation />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `./worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          //console.log(\"This web app is being served cache-first by a service \");\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              //console.log(\"New content is available and will be used when all \");\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\n      \"Service-Worker\": \"script\",\n    },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// eslint-disable-next-line no-console\nconsole.log(\n  \"\\n\\n%c¡Hola desarrollador!\\n\\nConsulta el código fuente en\\nhttps://github.com/rmaafs/crypt-me-api \\n\\n%cAPI REST en Postman:\\nhttps://documenter.getpostman.com/view/9525350/U16krkhd \\n\\n\\n\",\n  \"color:aqua\",\n  \"color:orange\"\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}